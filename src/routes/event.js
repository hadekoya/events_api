const express = require('express');
const event = require('./event');

const request = require("request");
const slug = require("slug");
const { check, validationResult } = require("express-validator");
const router = express.Router();

// defining an endpoint to return all events
router.get("/", (req, res) => {
    const url = `https://api.airtable.com/v0/${process.env.AIRTABLE_API_ID}/Event?view=Grid%20view&api_key=${process.env.AIRTABLE_API_KEY}`;

    console.log(`Fetching ${url}`);

    request({ url, json: true }, (err, response, body) => {
        if (!err) {
            let newArray = body.records.map(obj => obj.fields);
            //slugify title ... it will add new field slug with SEO optimized name
            newArray = newArray.filter(d => d.title);
            //console.log('after filter');
            //console.log(newArray);
            newArray.forEach(project => {
                const d = project;
                d.slug = slug(d.title, { lower: true });
            });

            res.send(newArray);
        } else {
            res.status(500).send({ error: err });
        }
    });
});

// defining an endpoint to return  events based on autogenerated ID_ field
router.get(
    "/:eventid",
    [check("eventid", "The event ID must be a number").isNumeric()],
    (req, res) => {
        /* check eventID to confirm input as number */
        const errors = validationResult(req);
        if (!errors.isEmpty()) {
            return res.status(422).json({ errors: errors.array() });
        }

        const url = `https://api.airtable.com/v0/${
            process.env.AIRTABLE_API_ID
            }/Event?filterByFormula=ID_=${req.params.eventid}&api_key=${
            process.env.AIRTABLE_API_KEY
            }`;

        console.log(`Fetching ${url}`);
        //fetch call for URL
        request({ url, json: true }, (err, response, body) => {
            if (!err) {
                let newArray = body.records.map(obj => obj.fields);
                //slugify title ... it will add new field slug with SEO optimized name
                newArray = newArray.filter(d => d.title);
                newArray.forEach(project => {
                    const d = project;
                    d.slug = slug(d.title, { lower: true });
                });

                res.send(newArray);
            } else {
                res.status(500).send({ error: err });
            }
        });
    }
);

module.exports = router;